version: '3.8'

services:
#    apache2:
#        build:
#            context: ./etc/apache2
#        container_name: ${APP_NAME}_apache2
#        restart: always
#        volumes:
#            - "./etc/apache2/httpd.conf:/usr/local/apache2/conf/httpd.conf"
#            - "./etc/apache2/httpd-ssl.conf:/usr/local/apache2/conf/extra/httpd-ssl.conf"
#            - ${APP_PATH}:/var/www/html
#            - "./logs/apache2/:/usr/local/apache2/logs"
#        ports:
#            - 80:80
#            - 443:443
#        depends_on:
#            - phpfpm
#        networks:
#            - web-network
    phpfpm:
        build:
            context: ./etc/php/${PHP_VERSION}
        container_name: ${APP_NAME}_phpfpm
        restart: always
        ports:
            - 9000:9000
        volumes:
            - ${APP_PATH}:/var/www/html
            - ./etc/php/${PHP_VERSION}/php.ini:/usr/local/etc/php/conf.d/php.ini
            - ./etc/smtp/msmtprc:/etc/msmtprc
        networks:
            - web-network
    nginx:
        build:
            context: ./etc/nginx
        container_name: ${APP_NAME}_nginx
        restart: always
        volumes:
            - ${APP_PATH}:/var/www/html
            - ./logs/nginx:/var/log/nginx
            - ./etc/nginx/bitrix.conf:/etc/nginx/conf.d/default.conf
        ports:
            - 80:80
            - 443:443
        depends_on:
            - phpfpm
        networks:
            - web-network
    mailhog:
        image: mailhog/mailhog
        container_name: ${APP_NAME}_mailhog
        volumes:
            - ./mailhog_mail:/mailhog
        environment:
            MH_STORAGE: maildir
        ports:
            - "8025:8025"
            - "1025:1025"
        networks:
            - web-network
    # nodejs:
    #     build: ./etc/nodejs
    #     container_name: ${APP_NAME}_nodejs
    #     restart: "no"
    #     entrypoint: sh /bin/entrypoint.sh
    #     volumes:
    #         - ${APP_PATH}/${APP_FRONTEND_SOURCE_PATH}:/var/www/html/${APP_FRONTEND_SOURCE_PATH}
    #         - ${APP_PATH}/${APP_FRONTEND_DIST_PATH}:/var/www/html/${APP_FRONTEND_DIST_PATH}
    #         - ./etc/nodejs/entrypoint.sh:/bin/entrypoint.sh
    database:
        build:
            context: ./etc/db/mariadb_10_3
        container_name: ${APP_NAME}_db
        restart: 'always'
        ports:
            - '3306:3306'
        volumes:
            - ./data/mysql:/var/lib/mysql
            - ./logs/mysql:/var/log/mysql
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        networks:
            - web-network
    sphinx:
        build:
            context: ./etc/sphinx
        container_name: ${APP_NAME}_sphinx
        volumes:
            - ./etc/sphinx/sphinx.conf:/etc/sphinxsearch/sphinx.conf
            - ./sphinxdata:/var/lib/sphinxsearch/data
        ports:
            - '9306:9306'
            - '9300:9300'
        networks:
            - web-network

    # phpmyadmin:
    #     image: 'phpmyadmin'
    #     container_name: ${APP_NAME}_phpmyadmin
    #     links:
    #         - database
    #     environment:
    #         PMA_HOST: database
    #         PMA_PORT: 3306
    #         PMA_USER: root
    #         PMA_PASSWORD: 123456789
    #         MYSQL_ROOT_PASSWORD: 123456789
    #         MYSQL_USER: docker
    #         MYSQL_PASSWORD: docker
    #     ports:
    #         - 8080:80
    #     networks:
    #         - web-network
networks:
    web-network:
        driver: bridge
